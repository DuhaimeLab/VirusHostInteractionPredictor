name: Test

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

env:
  poetry_version: 1.7.1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install Poetry
      - name: Install Poetry
        run: pipx install poetry==${{ env.poetry_version }}

      # Run Poetry checks
      - name: Check pyproject.toml and poetry.lock
        run: |
          poetry check
          poetry check --lock

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          cache: "poetry"

      # Install dependencies and add virtualenv to path
      - name: Install dependencies
        run: |
          poetry install --only main,lint
          echo "$(poetry env info --path)/bin" >> $GITHUB_PATH

      # Ruff
      - name: Lint and check formatting with Ruff
        run: |
          ruff check --output-format=github .
          ruff format --diff .

      # Pyright
      - name: Check with Pyright
        run: pyright

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      # Install Poetry
      - name: Install Poetry
        run: pipx install poetry==${{ env.poetry_version }}

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      # Install dependencies and add virtualenv to path
      - name: Install dependencies
        run: |
          poetry install --only main,test
          echo "$(poetry env info --path)/bin" >> $GITHUB_PATH

      # Run tests
      - name: Run tests and collect coverage
        run: coverage run -m pytest && coverage xml

      # Upload coverage reports to Codecov
      - name: Upload coverage reports to Codecov
        if: ${{ matrix.python-version }} == "3.12"
        uses: codecov/codecov-action@v3

  # This job does nothing and is only used for branch protection
  # https://github.com/marketplace/actions/alls-green#why
  alls-green:
    if: always()
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJson(needs) }}
